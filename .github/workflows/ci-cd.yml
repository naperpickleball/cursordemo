name: CI/CD Pipeline

on:
  push:
    branches: [ main, feature/azure-deployment ]
  pull_request:
    branches: [ main ]

env:
  REGISTRY: ${{ secrets.REGISTRY }}
  IMAGE_NAME: pickleball-league
  N8N_IMAGE_NAME: n8n-workflows

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
    
    - name: Build
      run: npm run build

  build-and-push:
    needs: build-and-test
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Build and push frontend container
      uses: azure/docker-login@v1
      with:
        login-server: ${{ env.REGISTRY }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}
    
    - name: Build and push frontend image
      run: |
        docker build -t ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }} .
        docker push ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
    
    - name: Build and push N8N image
      run: |
        docker build -t ${{ env.REGISTRY }}/${{ env.N8N_IMAGE_NAME }}:${{ github.sha }} -f Dockerfile.n8n .
        docker push ${{ env.REGISTRY }}/${{ env.N8N_IMAGE_NAME }}:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/feature/azure-deployment'
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Deploy to Azure Container Apps
      uses: azure/container-apps-deploy@v1
      with:
        appName: pickleball-league
        imageToDeploy: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
        containerAppName: pickleball-league
        resourceGroup: ${{ secrets.AZURE_RESOURCE_GROUP }}
        targetPort: 80
        ingress: external
        env: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }}
    
    - name: Deploy N8N to Azure Container Apps
      uses: azure/container-apps-deploy@v1
      with:
        appName: n8n-workflows
        imageToDeploy: ${{ env.REGISTRY }}/${{ env.N8N_IMAGE_NAME }}:${{ github.sha }}
        containerAppName: n8n-workflows
        resourceGroup: ${{ secrets.AZURE_RESOURCE_GROUP }}
        targetPort: 5678
        ingress: external
        env: ${{ github.ref == 'refs/heads/main' && 'production' || 'staging' }} 